// 给定两个由小写字母构成的字符串 A 和 B ，只要我们可以通过交换 A 中的两个字母得到与 B 相等的结果，就返回 true ；否则返回 false 。
// 示例 1：
// 输入： A = "ab", B = "ba"
// 输出： true
// 示例 2：
// 输入： A = "ab", B = "ab"
// 输出： false
// 示例 3:
// 输入： A = "aa", B = "aa"
// 输出： true
// 示例 4：
// 输入： A = "aaaaaaabc", B = "aaaaaaacb"
// 输出： true
// 示例 5：
// 输入： A = "", B = "aa"
// 输出： false
// 提示：
// 0 <= A.length <= 20000
// 0 <= B.length <= 20000
// A 和 B 仅由小写字母构成。
// 来源：力扣（LeetCode）
// 链接：https://leetcode-cn.com/problems/buddy-strings

class Solution {
    public boolean buddyStrings(String A, String B) {
        if(A.length()!=B.length() || A.length()<2){
            return false;
        }
        int num = 0;
		List<Character> character = new ArrayList<>();
		if (A.equals(B)){
			for (int k=0; k<A.length(); k++){
				if (character.contains( A.charAt(k))){
					return true;
				}else{
					character.add(A.charAt(k));
				}
			}
			return false;
		}
        char[] a = new char[3];
        char[] b = new char[3];
        for(int i=0;i<A.length();i++){
            if(A.charAt(i)!=B.charAt(i)){
                a[num] = A.charAt(i);
                b[num] = B.charAt(i);
                num++;
            }
            if(num>=3) return false;
        }
        if(a[0]!=b[1]|| a[1]!=b[0]) return false;
        return true;
    }
}